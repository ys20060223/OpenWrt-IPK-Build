name: OpenWrt-IPK-Builder-Single-Plugin-GitHub-Repo

on:
  workflow_dispatch:
    inputs:
      Model:
        description: '选择设备（H3C NX30 Pro）'
        required: true
        default: 'H3C NX30 Pro'
        type: choice
        options:
          - 'H3C NX30 Pro'
      PluginRepo:
        description: '插件 GitHub 仓库地址（如 https://github.com/xiaorouji/openwrt-passwall）'
        required: true
        type: string
      PluginName:
        description: '插件目录名（如 luci-app-passwall）'
        required: true
        type: string

env:
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-latest
    if: github.event.repository.owner.id == github.event.sender.id || !github.event.sender.id
    env:
      arch_path: mediatek/filogic
      model_name: H3C-NX30-Pro

    steps:
      - name: 安装依赖环境 # 安装构建所需工具
        run: |
          sudo apt-get update -qq
          sudo apt-get install -qq --no-install-recommends \
            aria2 build-essential clang llvm flex g++ gawk gcc-multilib gettext \
            git libncurses5-dev libssl-dev python3 python3-pyelftools python3-setuptools \
            rsync unzip zstd zlib1g-dev jq subversion qemu-utils ccache \
            libelf-dev device-tree-compiler libgmp3-dev libmpc-dev
          git clone --depth=1 https://github.com/openwrt-dev/po2lmo
          (cd po2lmo && sudo make && sudo make install)

      - name: 下载并解压 SDK # 使用 ImmortalWrt 24.10.2 官方 SDK
        run: |
          SDK_URL="https://downloads.immortalwrt.org/releases/24.10.2/targets/mediatek/filogic/immortalwrt-sdk-24.10.2-mediatek-filogic_gcc-13.3.0_musl.Linux-x86_64.tar.zst"
          wget "$SDK_URL"
          mkdir OpenWrt-sdk && tar -I 'zstd -d' -xf immortalwrt-sdk-*.tar.zst -C OpenWrt-sdk --strip-components 1 && rm immortalwrt-sdk-*.tar.zst

      - name: 克隆插件仓库 # 克隆单个插件 GitHub 仓库
        run: |
          cd OpenWrt-sdk
          git clone --depth=1 ${{ github.event.inputs.PluginRepo }} package/${{ github.event.inputs.PluginName }}

      - name: 更新 feeds 并安装插件 # 更新 feeds 并安装插件依赖
        run: |
          cd OpenWrt-sdk
          ./scripts/feeds update -a
          ./scripts/feeds install ${{ github.event.inputs.PluginName }}
          rm -rf feeds/packages/lang/golang
          git clone https://github.com/sbwml/packages_lang_golang -b 24.x feeds/packages/lang/golang
          echo "CONFIG_PACKAGE_${{ github.event.inputs.PluginName }}=y" >> .config

      - name: 编译插件 # 开始编译插件
        run: |
          cd OpenWrt-sdk
          make package/${{ github.event.inputs.PluginName }}/compile -j$(nproc) V=s

      - name: 收集构建产物 # 收集 .ipk 文件
        run: |
          cd OpenWrt-sdk
          mkdir -p ./artifact/IPK
          find ./bin/packages/*/*/ -maxdepth 1 -type f -name "*.ipk" | xargs -i mv -f {} ./artifact/IPK/
          echo "IPK=$PWD/artifact/IPK" >> $GITHUB_ENV

      - name: 上传构建产物 # 上传 .ipk 到 Actions
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.model_name }}-mediatek-filogic-${{ github.event.inputs.PluginName }}
          path: ${{ env.IPK }}

      - name: 清理旧工作流记录 # 清理旧记录
        uses: Mattraks/delete-workflow-runs@main
        continue-on-error: true
        with:
          retain_days: 1
          keep_minimum_runs: 0
